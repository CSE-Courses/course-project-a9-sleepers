{"ast":null,"code":"var _jsxFileName = \"/home/charlesw25/Desktop/Fall20/Software_Engineering/course-project-a9-sleepers/visual-desktop-tools-box/src/components/MainPage/VisualDesktop/VisualDesktop.js\";\nimport React, { useEffect, useState } from 'react';\nimport Desktop from '../images/Desktop.png';\nimport ImageMapper from 'react-image-mapper'; //Calculating Current Window width\n\nconst getWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\nfunction useCurrentWitdh() {\n  // save current window width in the state object\n  let [width, setWidth] = useState(getWidth()); // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n\n  useEffect(() => {\n    const resizeListener = () => {\n      // change width from the state object\n      setWidth(getWidth());\n    }; // set resize listener\n\n\n    window.addEventListener('resize', resizeListener); // clean up function\n\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, []);\n  return width;\n}\n\nexport default function VisualDesktop() {\n  let width = useCurrentWitdh();\n  console.log(width);\n  const MAP = {\n    name: \"my-map\",\n    areas: [{\n      name: \"Google\",\n      shape: \"poly\",\n      coords: [640, 350, 1290, 350, 1290, 810, 640, 810],\n      href: '/Google',\n      strokeColor: \"blue\"\n    }, {\n      name: \"Timer\",\n      shape: \"poly\",\n      coords: [1425, 800, 1570, 800, 1563, 890, 1433, 890],\n      href: '/Timer',\n      strokeColor: \"purpule\"\n    }, {\n      name: \"Calculator\",\n      shape: \"poly\",\n      coords: [1520, 900, 1595, 885, 1720, 960, 1630, 1000],\n      strokeColor: \"yellow\",\n      href: '/Calculator'\n    } // more to be add: checklist.. calender... ...etc\n    ]\n  };\n  return /*#__PURE__*/React.createElement(ImageMapper, {\n    src: Desktop,\n    className: \"img-fluid\",\n    map: MAP,\n    width: width,\n    imgWidth: 1920,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  });\n}","map":{"version":3,"sources":["/home/charlesw25/Desktop/Fall20/Software_Engineering/course-project-a9-sleepers/visual-desktop-tools-box/src/components/MainPage/VisualDesktop/VisualDesktop.js"],"names":["React","useEffect","useState","Desktop","ImageMapper","getWidth","window","innerWidth","document","documentElement","clientWidth","body","useCurrentWitdh","width","setWidth","resizeListener","addEventListener","removeEventListener","VisualDesktop","console","log","MAP","name","areas","shape","coords","href","strokeColor"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CAKA;;AACA,MAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,UAAP,IAClBC,QAAQ,CAACC,eAAT,CAAyBC,WADP,IAElBF,QAAQ,CAACG,IAAT,CAAcD,WAFnB;;AAIA,SAASE,eAAT,GAA2B;AACzB;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACG,QAAQ,EAAT,CAAhC,CAFyB,CAIzB;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,cAAc,GAAG,MAAM;AAC3B;AACAD,MAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;AACD,KAHD,CADc,CAKd;;;AACAC,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCD,cAAlC,EANc,CAQd;;AACA,WAAO,MAAM;AACX;AACAT,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCF,cAArC;AACD,KAHD;AAID,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAOF,KAAP;AACD;;AAGD,eAAe,SAASK,aAAT,GAAyB;AACtC,MAAIL,KAAK,GAAGD,eAAe,EAA3B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,QAAMQ,GAAG,GAAG;AAEVC,IAAAA,IAAI,EAAE,QAFI;AAGVC,IAAAA,KAAK,EAAE,CACL;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,EAAc,GAAd,EAAkB,IAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAgC,GAAhC,CAAzC;AAAgFC,MAAAA,IAAI,EAAG,SAAvF;AAAmGC,MAAAA,WAAW,EAAC;AAA/G,KADK,EAEL;AAAEL,MAAAA,IAAI,EAAE,OAAR;AAAiBE,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,MAAM,EAAE,CAAC,IAAD,EAAM,GAAN,EAAU,IAAV,EAAe,GAAf,EAAmB,IAAnB,EAAwB,GAAxB,EAA4B,IAA5B,EAAiC,GAAjC,CAAxC;AAAgFC,MAAAA,IAAI,EAAC,QAArF;AAA+FC,MAAAA,WAAW,EAAC;AAA3G,KAFK,EAGL;AAAEL,MAAAA,IAAI,EAAE,YAAR;AAAsBE,MAAAA,KAAK,EAAE,MAA7B;AAAqCC,MAAAA,MAAM,EAAE,CAAC,IAAD,EAAM,GAAN,EAAU,IAAV,EAAe,GAAf,EAAmB,IAAnB,EAAwB,GAAxB,EAA4B,IAA5B,EAAiC,IAAjC,CAA7C;AAAqFE,MAAAA,WAAW,EAAC,QAAjG;AAA2GD,MAAAA,IAAI,EAAC;AAAhH,KAHK,CAKL;AALK;AAHG,GAAZ;AAWA,sBACQ,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEvB,OAAlB;AAA2B,IAAA,SAAS,EAAC,WAArC;AAAkD,IAAA,GAAG,EAAEkB,GAAvD;AAA4D,IAAA,KAAK,EAAER,KAAnE;AAA0E,IAAA,QAAQ,EAAE,IAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAID","sourcesContent":["\nimport React, {useEffect,useState} from 'react';\nimport Desktop from '../images/Desktop.png';\nimport ImageMapper from 'react-image-mapper';\n\n\n\n\n//Calculating Current Window width\nconst getWidth = () => window.innerWidth \n  || document.documentElement.clientWidth \n  || document.body.clientWidth;\n\nfunction useCurrentWitdh() {\n  // save current window width in the state object\n  let [width, setWidth] = useState(getWidth());\n\n  // in this case useEffect will execute only once because\n  // it does not have any dependencies.\n  useEffect(() => {\n    const resizeListener = () => {\n      // change width from the state object\n      setWidth(getWidth())\n    };\n    // set resize listener\n    window.addEventListener('resize', resizeListener);\n\n    // clean up function\n    return () => {\n      // remove resize listener\n      window.removeEventListener('resize', resizeListener);\n    }\n  }, [])\n\n  return width;\n}\n\n\nexport default function VisualDesktop (){\n  let width = useCurrentWitdh();\n  console.log(width);\n\n  const MAP = {\n    \n    name: \"my-map\",\n    areas: [\n      { name: \"Google\", shape: \"poly\", coords: [640,350,1290,350,1290,810 ,640,810],  href : '/Google' , strokeColor:\"blue\",},\n      { name: \"Timer\", shape: \"poly\", coords: [1425,800,1570,800,1563,890,1433,890],  href:'/Timer' ,strokeColor:\"purpule\",   },\n      { name: \"Calculator\", shape: \"poly\", coords: [1520,900,1595,885,1720,960,1630,1000], strokeColor:\"yellow\", href:'/Calculator'  },\n\n      // more to be add: checklist.. calender... ...etc\n    ]\n  }\n  return(\n          <ImageMapper src={Desktop} className=\"img-fluid\"  map={MAP} width={width} imgWidth={1920}/>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}